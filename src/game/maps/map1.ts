import { Direction, GhostMode, GhostType } from "../enums";
import { Point } from "../point";
import { IMap } from "./IMap";

export const map1: IMap = {
    data: [
        ['1', '-', '-', '-', '-', '-', '-', 'z', '-', '-', '-', '-', '-', '-', '2'],
        ['|', '.', '.', '.', '.', '.', 'p', '|', '.', '.', '.', '.', '.', 'p', '|'],
        ['|', '.', 'b', '.', '<', '>', '.', '_', '.', '<', '>', '.', 'b', '.', '|'],
        ['|', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '|'],
        ['|', '.', 'b', '.', '^', '.', '<', 'z', '>', '.', '^', '.', 'b', '.', '|'],
        ['|', '.', '.', '.', '|', '.', '.', '|', '.', '.', '|', '.', '.', '.', '|'],
        ['4', '-', '2', '.', 'c', '>', '.', '_', '.', '<', 'x', '.', '1', '-', '3'],
        ['!', '!', '|', '.', '|', '.', '.', '.', '.', '.', '|', '.', '|', '!', '!'],
        [' ', ' ', '|', '.', '_', '.', '^', '.', '^', '.', '_', '.', '|', ' ', ' '],
        [' ', ' ', '|', '.', '.', '.', '|', ' ', '|', '.', '.', '.', '|', ' ', ' '],
        [' ', ' ', '|', '.', '^', '.', '4', '-', '3', '.', '^', '.', '|', ' ', ' '],
        ['!', '!', '|', '.', '|', '.', '.', '.', '.', '.', '|', '.', '|', '!', '!'],
        ['1', '-', '3', '.', '_', '.', '1', '-', '2', '.', '_', '.', '4', '-', '2'],
        ['|', '.', '.', '.', '.', '.', '4', '-', '3', '.', '.', '.', '.', '.', '|'],
        ['|', '.', '<', '2', '.', '.', '.', '.', '.', '.', '.', '1', '>', '.', '|'],
        ['|', '.', '.', '|', '.', '<', '-', 'z', '-', '>', '.', '|', '.', '.', '|'],
        ['c', '>', '.', '_', '.', '.', '.', '_', '.', '.', '.', '_', '.', '<', 'x'],
        ['|', '.', '.', '.', '.', '^', '.', '.', '.', '^', '.', '.', '.', '.', '|'],
        ['|', '.', '<', '-', '-', 'v', '>', '.', '<', 'v', '-', '-', '>', '.', '|'],
        ['|', 'p', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'p', '|'],
        ['4', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '3'],
    ],
    respawnPoint: new Point(7, 9),
    ghostsSettings: [
        { 
            type: GhostType.Blinky,
            mode: GhostMode.Chase,
            startPosition: new Point(7, 7),
            startDirection: Direction.Left,
            delay: 400
        }, 
        { 
            type: GhostType.Pinky,
            mode: GhostMode.Chase,
            startPosition: new Point(7, 9),
            startDirection: Direction.Top,
            delay: 4000
        },
        { 
            type: GhostType.Inky,
            mode: GhostMode.Chase,
            startPosition: new Point(7, 9),
            startDirection: Direction.Top,
            delay: 7000
        },
        { 
            type: GhostType.Clyde,
            mode: GhostMode.Chase,
            startPosition: new Point(7, 9),
            startDirection: Direction.Top,
            delay: 9000
        }
    ]
}